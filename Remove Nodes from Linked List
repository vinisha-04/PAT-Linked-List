# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeNodes(self, head):
        """
        :type head: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        # stack = []
        # dummy = h = ListNode(0)
        # temp = head
        # while(temp):
        #     while stack and stack[-1]<temp.val:
        #         stack.pop()   
        #     stack.append(temp.val)
        #     temp = temp.next

        # for i in stack:
        #     h.next = ListNode(i)
        #     h = ListNode(i)

        # return dummy.next

        stack = []
        dummy = headNew = ListNode(None,head)
        curr = head
        while curr :
            while stack and stack[-1].val<curr.val :
                stack.pop()
            stack.append(curr)
            curr = curr.next
        for node in stack:
            headNew.next = node
            headNew = headNew.next
        return dummy.next
